#############################################################################
# Makefile for building: libemail.so
# Generated by qmake (1.02a) on: Thu Jul 11 16:01:59 2002
# Project:  plugin.pro
# Template: lib
# Command: $(QMAKE) plugin.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g -D_REENTRANT -fPIC  -DQT_THREAD_SUPPORT -DQT_PLUGIN
CXXFLAGS = -pipe -Wall -W -g -D_REENTRANT -fPIC  -DQT_THREAD_SUPPORT -DQT_PLUGIN
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/tools/designer/interfaces -I../../include -I/opt/sapdb/interfaces/odbc/incl -I$(QTDIR)/include -I$(QTDIR)/mkspecs/linux-g++
LINK     = g++
LFLAGS   = -shared -Wl,-soname,libemail.so.1 -Wl,-rpath,../
LIBS     = $(SUBLIBS) -Wl,-rpath,$(QTDIR)/lib -L$(QTDIR)/lib -lqt-mt -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
DEL_DIR  = rmdir
MOVE     = mv

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = plugin.h \
		email.h \
		cpop.h \
		mimecodec.h
SOURCES = plugin.cpp \
		email.cpp \
		cpop.cpp \
		mimecodec.cpp
OBJECTS = plugin.o \
		email.o \
		cpop.o \
		mimecodec.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_email.cpp \
		moc_cpop.cpp
OBJMOC = moc_email.o \
		moc_cpop.o
DIST	   = 
QMAKE_TARGET = email
DESTDIR  = ../
TARGET   = libemail.so
TARGETD   = libemail.so

first: all
####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile  ../$(TARGET)

../$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) 
	test -d ../ || mkdir -p ../
	-rm -f $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)
	-mv $(TARGET) ../



mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: plugin.pro  $(QTDIR)/mkspecs/linux-g++/qmake.conf 
	$(QMAKE) plugin.pro
qmake: 
	@$(QMAKE) plugin.pro

dist: 
	@mkdir -p .tmp/email && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/email/ && ( cd `dirname .tmp/email` && $(TAR) email.tar email && $(GZIP) email.tar ) && mv `dirname .tmp/email`/email.tar.gz . && rm -rf .tmp/email

mocclean:
	-rm -f $(OBJMOC)
	-rm -f $(SRCMOC)

uiclean:

clean: mocclean
	-rm -f $(OBJECTS) 
	-rm -f *~ core *.core


####### Sub-libraries

distclean: clean
	-rm -f ../$(TARGET) $(TARGET)
	

FORCE:

####### Compile

plugin.o: plugin.cpp plugin.h \
		email.h \
		cpop.h \
		bitmaps/16x16/mail_get.xpm \
		bitmaps/16x16/folder_new.xpm \
		bitmaps/16x16/filenew.xpm \
		bitmaps/contactnew.xpm \
		bitmaps/contactdelete.xpm \
		bitmaps/contactsave.xpm \
		bitmaps/contactclose.xpm \
		bitmaps/contactprint.xpm \
		bitmaps/editundo.xpm \
		bitmaps/editcut.xpm \
		bitmaps/editcopy.xpm \
		bitmaps/editpaste.xpm \
		bitmaps/editfind.xpm \
		bitmaps/helpcontents.xpm \
		bitmaps/helpcontext.xpm \
		mimecodec.h

email.o: email.cpp email.h \
		email.xpm \
		cpop.h \
		bitmaps/16x16/mail_get.xpm \
		bitmaps/16x16/folder_new.xpm \
		bitmaps/16x16/filenew.xpm \
		bitmaps/contactnew.xpm \
		bitmaps/contactdelete.xpm \
		bitmaps/contactsave.xpm \
		bitmaps/contactclose.xpm \
		bitmaps/contactprint.xpm \
		bitmaps/editundo.xpm \
		bitmaps/editcut.xpm \
		bitmaps/editcopy.xpm \
		bitmaps/editpaste.xpm \
		bitmaps/editfind.xpm \
		bitmaps/helpcontents.xpm \
		bitmaps/helpcontext.xpm \
		mimecodec.h

cpop.o: cpop.cpp cpop.h \
		email.h \
		mimecodec.h \
		bitmaps/16x16/mail_get.xpm \
		bitmaps/16x16/folder_new.xpm \
		bitmaps/16x16/filenew.xpm \
		bitmaps/contactnew.xpm \
		bitmaps/contactdelete.xpm \
		bitmaps/contactsave.xpm \
		bitmaps/contactclose.xpm \
		bitmaps/contactprint.xpm \
		bitmaps/editundo.xpm \
		bitmaps/editcut.xpm \
		bitmaps/editcopy.xpm \
		bitmaps/editpaste.xpm \
		bitmaps/editfind.xpm \
		bitmaps/helpcontents.xpm \
		bitmaps/helpcontext.xpm

mimecodec.o: mimecodec.cpp mimecodec.h

moc_email.o: moc_email.cpp email.h cpop.h \
		bitmaps/16x16/mail_get.xpm \
		bitmaps/16x16/folder_new.xpm \
		bitmaps/16x16/filenew.xpm \
		bitmaps/contactnew.xpm \
		bitmaps/contactdelete.xpm \
		bitmaps/contactsave.xpm \
		bitmaps/contactclose.xpm \
		bitmaps/contactprint.xpm \
		bitmaps/editundo.xpm \
		bitmaps/editcut.xpm \
		bitmaps/editcopy.xpm \
		bitmaps/editpaste.xpm \
		bitmaps/editfind.xpm \
		bitmaps/helpcontents.xpm \
		bitmaps/helpcontext.xpm \
		mimecodec.h

moc_cpop.o: moc_cpop.cpp cpop.h mimecodec.h

moc_email.cpp: $(MOC) email.h
	$(MOC) email.h -o moc_email.cpp

moc_cpop.cpp: $(MOC) cpop.h
	$(MOC) cpop.h -o moc_cpop.cpp

####### Install

install_target: 
	@test -d $(INSTALL_ROOT)/plugins/ || mkdir -p $(INSTALL_ROOT)/plugins/
	-$(COPY) "../$(TARGET)" "$(INSTALL_ROOT)/plugins/$(TARGET)"
uninstall_target: 
	-$(DEL_FILE) "$(INSTALL_ROOT)/plugins/$(TARGET)"
	-$(DEL_DIR) "$(INSTALL_ROOT)/plugins/"

install: all install_target 

uninstall: uninstall_target 

