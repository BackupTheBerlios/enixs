#############################################################################
# Makefile for building: enixs
# Generated by qmake (1.02a) on: Fri Jul  5 17:45:08 2002
# Project:  enixs.pro
# Template: app
# Command: $(QMAKE) enixs.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g -D_REENTRANT  -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -g -D_REENTRANT  -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/tools/designer/interfaces -I../share -I../include -I/opt/sapdb/interfaces/odbc/incl -I$(QTDIR)/include -Iobj/ -I$(QTDIR)/mkspecs/default
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lsapdb -L/usr/lib -lenixsuserdata -l enixsutil -L../libs -lqt-mt -lpthread -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
DEL_DIR  = rmdir
MOVE     = mv

####### Output directory

OBJECTS_DIR = obj/

####### Files

HEADERS = enixs.h \
		enixsview.h \
		resource.h \
		login/login.h \
		plugin/widgetfactory.h \
		plugindef/plugindef.h \
		tabpage/tabpage.h \
		tabpage/pluginbutton.h \
		whatsup/whatsup.h
SOURCES = main.cpp \
		enixs.cpp \
		enixsview.cpp \
		login/login.cpp \
		plugin/widgetfactory.cpp \
		plugindef/plugindef.cpp \
		tabpage/tabpage.cpp \
		tabpage/pluginbutton.cpp \
		whatsup/whatsup.cpp
OBJECTS = obj/main.o \
		obj/enixs.o \
		obj/enixsview.o \
		obj/login.o \
		obj/widgetfactory.o \
		obj/plugindef.o \
		obj/tabpage.o \
		obj/pluginbutton.o \
		obj/whatsup.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = obj/moc_enixs.cpp \
		obj/moc_enixsview.cpp \
		obj/moc_login.cpp \
		obj/moc_plugindef.cpp \
		obj/moc_tabpage.cpp \
		obj/moc_pluginbutton.cpp \
		obj/moc_whatsup.cpp
OBJMOC = obj/moc_enixs.o \
		obj/moc_enixsview.o \
		obj/moc_login.o \
		obj/moc_plugindef.o \
		obj/moc_tabpage.o \
		obj/moc_pluginbutton.o \
		obj/moc_whatsup.o
DIST	   = 
QMAKE_TARGET = enixs
DESTDIR  = 
TARGET   = enixs

first: all
####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: enixs.pro  $(QTDIR)/mkspecs/default/qmake.conf 
	$(QMAKE) enixs.pro
qmake: 
	@$(QMAKE) enixs.pro

dist: 
	@mkdir -p obj/enixs && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) obj/enixs/ && ( cd `dirname obj/enixs` && $(TAR) enixs.tar enixs && $(GZIP) enixs.tar ) && mv `dirname obj/enixs`/enixs.tar.gz . && rm -rf obj/enixs

mocclean:
	-rm -f $(OBJMOC)
	-rm -f $(SRCMOC)

uiclean:

clean: mocclean
	-rm -f $(OBJECTS) 
	-rm -f *~ core *.core


####### Sub-libraries

distclean: clean
	-rm -f $(TARGET) $(TARGET)
	

FORCE:

####### Compile

obj/main.o: main.cpp enixs.h \
		plugin/widgetfactory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/main.o main.cpp

obj/enixs.o: enixs.cpp enixsview.h \
		enixs.h \
		plugin/widgetfactory.h \
		login/login.h \
		resource.h \
		bitmaps/filenew.xpm \
		bitmaps/filequit.xpm \
		bitmaps/editfind.xpm \
		bitmaps/helpcontents.xpm \
		bitmaps/helpcontext.xpm \
		bitmaps/enixs32.xpm \
		whatsup/whatsup.h \
		plugindef/plugindef.h \
		tabpage/tabpage.h \
		tabpage/pluginbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/enixs.o enixs.cpp

obj/enixsview.o: enixsview.cpp enixsview.h \
		tabpage/tabpage.h \
		plugin/widgetfactory.h \
		whatsup/whatsup.h \
		plugindef/plugindef.h \
		tabpage/pluginbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/enixsview.o enixsview.cpp

obj/login.o: login/login.cpp login/login.h \
		bitmaps/enixs50.xpm
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/login.o login/login.cpp

obj/widgetfactory.o: plugin/widgetfactory.cpp plugin/widgetfactory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/widgetfactory.o plugin/widgetfactory.cpp

obj/plugindef.o: plugindef/plugindef.cpp plugindef/plugindef.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/plugindef.o plugindef/plugindef.cpp

obj/tabpage.o: tabpage/tabpage.cpp tabpage/tabpage.h \
		tabpage/pluginbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/tabpage.o tabpage/tabpage.cpp

obj/pluginbutton.o: tabpage/pluginbutton.cpp tabpage/pluginbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/pluginbutton.o tabpage/pluginbutton.cpp

obj/whatsup.o: whatsup/whatsup.cpp whatsup/whatsup.h \
		tabpage/tabpage.h \
		tabpage/pluginbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/whatsup.o whatsup/whatsup.cpp

obj/moc_enixs.o: obj/moc_enixs.cpp enixs.h plugin/widgetfactory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_enixs.o obj/moc_enixs.cpp

obj/moc_enixsview.o: obj/moc_enixsview.cpp enixsview.h whatsup/whatsup.h \
		plugindef/plugindef.h \
		tabpage/tabpage.h \
		tabpage/pluginbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_enixsview.o obj/moc_enixsview.cpp

obj/moc_login.o: obj/moc_login.cpp login/login.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_login.o obj/moc_login.cpp

obj/moc_plugindef.o: obj/moc_plugindef.cpp plugindef/plugindef.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_plugindef.o obj/moc_plugindef.cpp

obj/moc_tabpage.o: obj/moc_tabpage.cpp tabpage/tabpage.h tabpage/pluginbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_tabpage.o obj/moc_tabpage.cpp

obj/moc_pluginbutton.o: obj/moc_pluginbutton.cpp tabpage/pluginbutton.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_pluginbutton.o obj/moc_pluginbutton.cpp

obj/moc_whatsup.o: obj/moc_whatsup.cpp whatsup/whatsup.h tabpage/tabpage.h \
		tabpage/pluginbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_whatsup.o obj/moc_whatsup.cpp

obj/moc_enixs.cpp: $(MOC) enixs.h
	$(MOC) enixs.h -o obj/moc_enixs.cpp

obj/moc_enixsview.cpp: $(MOC) enixsview.h
	$(MOC) enixsview.h -o obj/moc_enixsview.cpp

obj/moc_login.cpp: $(MOC) login/login.h
	$(MOC) login/login.h -o obj/moc_login.cpp

obj/moc_plugindef.cpp: $(MOC) plugindef/plugindef.h
	$(MOC) plugindef/plugindef.h -o obj/moc_plugindef.cpp

obj/moc_tabpage.cpp: $(MOC) tabpage/tabpage.h
	$(MOC) tabpage/tabpage.h -o obj/moc_tabpage.cpp

obj/moc_pluginbutton.cpp: $(MOC) tabpage/pluginbutton.h
	$(MOC) tabpage/pluginbutton.h -o obj/moc_pluginbutton.cpp

obj/moc_whatsup.cpp: $(MOC) whatsup/whatsup.h
	$(MOC) whatsup/whatsup.h -o obj/moc_whatsup.cpp

####### Install

install_target: 
	@test -d $(INSTALL_ROOT)/usr/local/enixs/ || mkdir -p $(INSTALL_ROOT)/usr/local/enixs/
	-$(COPY) "$(QMAKE_TARGET)" "$(INSTALL_ROOT)/usr/local/enixs/$(QMAKE_TARGET)"
uninstall_target: 
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/enixs/$(QMAKE_TARGET)"
	-$(DEL_DIR) "$(INSTALL_ROOT)/usr/local/enixs/"

install: all install_target 

uninstall: uninstall_target 

