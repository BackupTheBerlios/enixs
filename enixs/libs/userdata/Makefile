#############################################################################
# Makefile for building: libenixsuserdata.so.1.0.0
# Generated by qmake (1.02a) on: Sat Jun 22 21:24:29 2002
# Project:  libenixsuserdata.pro
# Template: lib
# Command: $(QMAKE) libenixsuserdata.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g -fPIC  
CXXFLAGS = -pipe -Wall -W -g -fPIC  
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/include -I/opt/sapdb/interfaces/odbc/incl -I../../include -I$(QTDIR)/include -I$(QTDIR)/mkspecs/default
LINK     = g++
LFLAGS   = -shared -Wl,-soname,libenixsuserdata.so.1
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lsapdb -lqt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
DEL_DIR  = rmdir
MOVE     = mv

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = userdata.h
SOURCES = userdata.cpp
OBJECTS = userdata.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = 
QMAKE_TARGET = enixsuserdata
DESTDIR  = 
TARGET   = libenixsuserdata.so.1.0.0
TARGETA	= libenixsuserdata.a
TARGETD	= libenixsuserdata.so.1.0.0
TARGET0	= libenixsuserdata.so
TARGET1	= libenixsuserdata.so.1
TARGET2	= libenixsuserdata.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) 
	-rm -f $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA): $(UICDECLS) $(OBJECTS) $(OBJMOC)
	-rm -f $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS) $(OBJMOC)

mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: libenixsuserdata.pro  $(QTDIR)/mkspecs/default/qmake.conf 
	$(QMAKE) libenixsuserdata.pro
qmake: 
	@$(QMAKE) libenixsuserdata.pro

dist: 
	@mkdir -p .tmp/enixsuserdata && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/enixsuserdata/ && ( cd `dirname .tmp/enixsuserdata` && $(TAR) enixsuserdata.tar enixsuserdata && $(GZIP) enixsuserdata.tar ) && mv `dirname .tmp/enixsuserdata`/enixsuserdata.tar.gz . && rm -rf .tmp/enixsuserdata

mocclean:

uiclean:

clean:
	-rm -f $(OBJECTS) 
	-rm -f *~ core *.core


####### Sub-libraries

distclean: clean
	-rm -f $(TARGET) $(TARGET)
	-rm -f $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	

FORCE:

####### Compile

userdata.o: userdata.cpp userdata.h

####### Install

install_target: 
	@test -d $(INSTALL_ROOT)../ || mkdir -p $(INSTALL_ROOT)../
	-$(COPY) "$(TARGET)" "$(INSTALL_ROOT)../$(TARGET)"
	-ln -sf "$(TARGET)" "$(INSTALL_ROOT)../$(TARGET0)"
	-ln -sf "$(TARGET)" "$(INSTALL_ROOT)../$(TARGET1)"
	-ln -sf "$(TARGET)" "$(INSTALL_ROOT)../$(TARGET2)"
uninstall_target: 
	-$(DEL_FILE) "$(INSTALL_ROOT)../$(TARGET)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)../$(TARGET0)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)../$(TARGET1)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)../$(TARGET2)"
	-$(DEL_DIR) "$(INSTALL_ROOT)../"

install_includes: 
	@test -d $(INSTALL_ROOT)../../include/ || mkdir -p $(INSTALL_ROOT)../../include/
	-$(COPY_FILE) "userdata.h" "$(INSTALL_ROOT)../../include/"
	
uninstall_includes: 
	-$(DEL_FILE) -r "$(INSTALL_ROOT)../../include/"
	-$(DEL_DIR) "$(INSTALL_ROOT)../../include/"

install: all install_target install_includes 

uninstall: uninstall_target uninstall_includes 

